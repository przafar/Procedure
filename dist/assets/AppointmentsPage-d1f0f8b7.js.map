{"version":3,"file":"AppointmentsPage-d1f0f8b7.js","sources":["../../src/pages/appointments/widgets/AppointmentsTable.vue","../../src/pages/appointments/widgets/EditUserForm.vue","../../src/pages/appointments/composables/useUsers.ts","../../src/pages/appointments/AppointmentsPage.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { defineVaDataTableColumns, useModal } from 'vuestic-ui'\nimport { User, UserRole } from '../types'\nimport { PropType, computed, toRef } from 'vue'\nimport { Pagination, Sorting } from '../../../data/pages/users'\nimport { useVModel } from '@vueuse/core'\n\nconst columns = defineVaDataTableColumns([\n  { label: 'Qabul vaqti', key: 'created_at', sortable: false },\n  { label: 'F.I.O', key: 'patient.full_name', sortable: true },\n  { label: 'Yo`nalishi', key: 'encounter_class.display', sortable: true },\n  { label: 'Turi', key: 'encounter_type.display', sortable: true },\n  { label: 'Izoh', key: 'reason_text', sortable: true },\n  { label: 'Holat', key: 'status', sortable: true }, // New column for status\n  { label: ' ', key: 'actions', align: 'right' },\n])\n\nconst props = defineProps({\n  users: {\n    type: Array as PropType<User[]>,\n    required: true,\n  },\n  loading: { type: Boolean, default: false },\n  pagination: { type: Object as PropType<Pagination>, required: true },\n  sortBy: { type: String as PropType<Sorting['sortBy']>, required: true },\n  sortingOrder: { type: String as PropType<Sorting['sortingOrder']>, required: true },\n})\n\nconst emit = defineEmits<{\n  (event: 'edit-user', user: User): void\n  (event: 'delete-user', user: User): void\n  (event: 'update:sortBy', sortBy: Sorting['sortBy']): void\n  (event: 'update:sortingOrder', sortingOrder: Sorting['sortingOrder']): void\n}>()\n\nconst users = toRef(props, 'users')\nconst sortByVModel = useVModel(props, 'sortBy', emit)\nconst sortingOrderVModel = useVModel(props, 'sortingOrder', emit)\n\nconst roleColors: Record<UserRole, string> = {\n  admin: 'danger',\n  user: 'background-element',\n  owner: 'warning',\n}\n\nconst totalPages = computed(() => Math.ceil(props.pagination.total / props.pagination.perPage))\n\nconst { confirm } = useModal()\n\nconst onUserDelete = async (user: User) => {\n  const agreed = await confirm({\n    title: 'Delete user',\n    message: `Are you sure you want to delete ${user.fullname}?`,\n    okText: 'Delete',\n    cancelText: 'Cancel',\n    size: 'small',\n    maxWidth: '380px',\n  })\n\n  if (agreed) {\n    emit('delete-user', user)\n  }\n}\nconst formatDate = (dateStr) => {\n  const date = new Date(dateStr);\n  // Set the timezone offset for GMT+5\n  const options = {\n    timeZone: 'Asia/Tashkent', // This is the timezone for GMT+5 (Uzbekistan)\n    day: '2-digit',\n    month: '2-digit',\n    year: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit',\n    hour12: false\n  };\n\n  return date.toLocaleString('en-GB', options).replace(',', ''); // Format in DD-MM-YYYY HH:mm\n};\n\nconst formatIdentifiers = (identifiers: Identifier[] | null | undefined) => {\n  identifiers = identifiers || [];\n\n  if (identifiers.length === 0) {\n    return 'Hujjati yo`q';\n  }\n\n  if (identifiers.length <= 2) {\n    return identifiers.map((item) => item.value).join(', ');\n  }\n\n  return (\n    identifiers\n      .slice(0, 2)\n      .map((item) => item)\n      .join(', ') +\n    ' + ' +\n    (identifiers.length - 2) +\n    ' K`op'\n  )\n}\n</script>\n\n<template>\n  <VaDataTable\n    v-model:sort-by=\"sortByVModel\"\n    v-model:sorting-order=\"sortingOrderVModel\"\n    :columns=\"columns\"\n    :items=\"users\"\n    :loading=\"$props.loading\"\n  >\n    <template #cell(created_at)=\"{ rowData }\">\n      <div class=\"flex items-center gap-2 max-w-[230px] ellipsis\">\n        {{ formatDate(rowData.created_at) }}\n      </div>\n    </template>\n\n    <template #cell(status)=\"{ rowData }\">\n      <div\n        :class=\"[\n          'px-2 py-1 rounded text-white',\n          rowData.status === 'in-progress' ? 'bg-gray-400' : '',\n          rowData.status === 'finished' ? 'bg-green-500' : '',\n          rowData.status === 'draft' ? 'bg-gray-500' : '',\n          rowData.status === 'entered-in-error' ? 'bg-red-500' : ''\n        ]\"\n        class=\"max-w-[120px] text-center\"\n      >\n        {{ rowData.status }}\n      </div>\n    </template>\n\n    <template #cell(role)=\"{ rowData }\">\n      <VaBadge :text=\"rowData.role\" :color=\"roleColors[rowData.role as UserRole]\" />\n    </template>\n\n    <template #cell(identifier)=\"{ rowData }\">\n      <div class=\"ellipsis max-w-[300px] lg:max-w-[450px]\">\n        {{ formatIdentifiers(rowData.identifier) }}\n      </div>\n    </template>\n\n    <template #cell(actions)=\"{ rowData }\">\n      <div class=\"flex gap-2 justify-end\">\n        <router-link :to=\"{ name: 'appointment-show', params: { id: rowData.id } }\">\n          <VaButton\n            preset=\"primary\"\n            size=\"small\"\n            icon=\"mso-visibility\"\n            aria-label=\"View appointment\"\n          />\n        </router-link>\n        <VaButton\n          preset=\"primary\"\n          size=\"small\"\n          disabled\n          icon=\"mso-delete\"\n          color=\"danger\"\n          aria-label=\"Delete appointment\"\n          @click=\"onUserDelete(rowData as User)\"\n        />\n      </div>\n    </template>\n  </VaDataTable>\n\n  <div class=\"pagination-container mt-4\">\n    <div class=\"pagination-controls\">\n      <VaButton\n        preset=\"secondary\"\n        icon=\"va-arrow-left\"\n        aria-label=\"Previous Page\"\n        class=\"rounded\"\n        rounded\n        gapped\n        :disabled=\"pagination.current_page === 1\"\n        @click=\"$emit('update:current_page', pagination.current_page - 1)\"\n      />\n\n      <VaPagination\n        v-model:modelValue=\"pagination.current_page\"\n        :pages=\"pagination.total_pages\"\n        :visible-pages=\"pagination.total_pages\"\n        @update:modelValue=\"$emit('update:current_page', pagination.current_page)\"\n        active-page-color=\"#154EC1\"\n        buttons-preset=\"secondary\"\n      >\n\n      </VaPagination>\n\n      <VaButton\n        preset=\"secondary\"\n        icon=\"va-arrow-right\"\n        aria-label=\"Next Page\"\n        buttons-preset=\"secondary\"\n        rounded\n        gapped\n        :disabled=\"pagination.current_page === pagination.total_pages\"\n        @click=\"$emit('update:current_page', pagination.current_page + 1)\"\n      />\n    </div>\n\n    <div class=\"total-count\">\n      <span>Общее количество: {{ pagination.total }}</span>\n    </div>\n  </div>\n</template>\n\n\n<style lang=\"scss\" scoped>\n.va-data-table {\n  ::v-deep(.va-data-table__table-tr) {\n    border-bottom: 1px solid var(--va-background-border);\n  }\n}\n.va-pagination__item--active {\n  background-color: #007bff;  /* Меняем цвет активной страницы */\n  color: white;\n  font-weight: bold;\n}\n.pagination-container {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 1rem;\n  flex-wrap: wrap; /* Адаптируется для мобильных устройств */\n}\n\n.pagination-controls {\n  display: flex;\n  gap: 0.5rem;\n  flex-wrap: wrap;\n}\n\n.total-count {\n  font-weight: 500;\n  color: #4a4a4a;\n  text-align: right;\n}\n\n/* Для мобильных устройств */\n@media (max-width: 768px) {\n  .pagination-container {\n    flex-direction: row; /* Перестраиваем в колонку на маленьких экранах */\n    align-items: center;\n  }\n\n  .pagination-controls {\n    justify-content: center;\n    gap: 0;\n  }\n\n  .total-count {\n    margin-top: 0.5rem;\n    text-align: center; /* Центрируем текст на маленьких экранах */\n  }\n\n  /* Стили для кнопок и других элементов */\n  .va-button {\n    font-size: 14px;\n    padding: 0.25rem 0.5rem; /* Уменьшаем кнопки для мобильных */\n  }\n\n  .va-pagination {\n    font-size: 14px; /* Уменьшаем размер текста в пагинации */\n  }\n  .active-page {\n    background: red !important;\n  }\n}\n\n</style>\n","<script setup lang=\"ts\">\nimport { PropType, computed, ref, watch } from 'vue'\nimport { useForm } from 'vuestic-ui'\nimport { User, UserRole } from '../types'\nimport { patientStore } from '../../../stores/patient'\nimport { validators } from '../../../services/utils'\nimport moment from 'moment'\n\n\nconst props = defineProps({\n  user: {\n    type: Object as PropType<User | null>,\n    default: null,\n  },\n  saveButtonLabel: {\n    type: String,\n    default: 'Saqlash',\n  },\n})\n\nconst defaultNewUser: User = {\n  lastname: '',\n  firstname: '',\n  middlename: '',\n  nnuzb: '',\n  ppn: '',\n  phone: '',\n  birthdate: null,\n  url: '',\n  gender: 'men',\n}\n\nconst newUser = ref<User>({ ...defaultNewUser })\nconst store = patientStore()\n\nconst isFormHasUnsavedChanges = computed(() => {\n  return Object.keys(newUser.value).some((key) => {\n    if (key === 'avatar' || key === 'projects') {\n      return false\n    }\n    return newUser.value[key as keyof User] !== (props.user ?? defaultNewUser)?.[key as keyof User]\n  })\n})\n\ndefineExpose({\n  isFormHasUnsavedChanges,\n})\n\nwatch(\n  () => props.user,\n  (newUserProps) => {\n    if (newUserProps) {\n      newUser.value = {\n        lastname: newUserProps.last_name || '',\n        firstname: newUserProps.first_name || '',\n        middlename: newUserProps.middle_name || '',\n        nnuzb: newUserProps.identifier.find(i => i.code === 'NNUZB')?.value || '',\n        ppn: newUserProps.identifier.find(i => i.code === 'PPN')?.value || '',\n        phone: newUserProps.phone_number || '',\n        birthdate: newUserProps.birth_date || null,\n        url: newUserProps.url || '',\n        gender: newUserProps.gender || 'men', // Adjust if necessary\n      }\n    } else {\n      newUser.value = { ...defaultNewUser }\n    }\n  },\n  { immediate: true },\n)\n\nconst form = useForm('add-user-form')\n\nconst emit = defineEmits(['close', 'save'])\n\nconst onSave = async () => {\n  if (form.validate()) {\n    const payload = {\n      lastName: newUser.value.lastname,\n      firstName: newUser.value.firstname,\n      middleName: newUser.value.middlename,\n      identifier: [\n        {\n          id: 1,\n          code: 'PPN',\n          value: newUser.value.ppn,\n          system: 'http://fhir.ssv.uz/ValueSet/identifier-type',\n          display: 'Серия и номер паспорта',\n          parent_id: null,\n        },\n        {\n          id: 2,\n          code: 'NNUZB',\n          value: newUser.value.nnuzb,\n          system: 'http://fhir.ssv.uz/ValueSet/identifier-type',\n          display: 'Идентификационный номер гражданина в Республике Узбекистан (ПИНФЛ)',\n          parent_id: null,\n        },\n      ],\n      phoneNumber: newUser.value.phone,\n      url: newUser.value.url,\n      gender: newUser.value.gender === 'men' ? 'male' : 'female',\n      birthDate: moment(newUser.value.birthdate).format('YYYY-MM-DDTHH:mm:ssZ'),\n    }\n\n    try {\n      if (props.user) {\n        await store.UPDATE_PATIENT(payload, props.user.id).then(async (response) => {\n          if (response.status === 200) {\n            const data = await response.data\n            emit('save', data)\n          } else {\n            console.error('Failed to save user data:', response)\n          }\n        })\n      } else {\n        await store.CREATE_PATIENT(payload).then(async (response) => {\n          if (response.status === 201) {\n            const data = await response.data\n            emit('save', data)\n          } else {\n            console.error('Failed to save user data:', response)\n          }\n        })\n      }\n    } catch (error) {\n      console.error('Error during request:', error)\n    }\n  }\n}\n\nconst roleSelectOptions: { text: Capitalize<UserRole>; value: UserRole }[] = [\n  { text: 'Erkak', value: 'men' },\n  { text: 'Ayol', value: 'female' },\n]\n\n</script>\n\n\n<template>\n  <VaForm v-slot=\"{ isValid }\" ref=\"add-user-form\" class=\"flex-col justify-start items-start gap-4 inline-flex w-full\">\n    <div class=\"self-stretch flex-col justify-start items-start gap-4 flex\">\n      <div class=\"flex gap-4 flex-col sm:flex-row w-full\">\n        <VaInput\n          v-model=\"newUser.lastname\"\n          label=\"Familiya\"\n          class=\"w-full sm:w-1/2\"\n          :rules=\"[validators.required]\"\n          name=\"lastname\"\n        />\n        <VaInput\n          v-model=\"newUser.firstname\"\n          label=\"Ism\"\n          class=\"w-full sm:w-1/2\"\n          :rules=\"[validators.required]\"\n          name=\"firstname\"\n        />\n        <VaInput v-model=\"newUser.middlename\" label=\"Otasining ismi\" class=\"w-full sm:w-1/2\" name=\"middlename\" />\n      </div>\n      <div class=\"flex gap-4 flex-col sm:flex-row w-full\">\n        <VaInput v-model=\"newUser.nnuzb\" label=\"JSHSHR (Pinfl)\" class=\"w-full sm:w-1/2\" name=\"nnuzb\" />\n        <VaInput v-model=\"newUser.ppn\" label=\"Passport\" class=\"w-full sm:w-1/2\" name=\"ppn\" />\n      </div>\n\n      <div class=\"flex gap-4 w-full\">\n        <div class=\"w-1/2\">\n          <VaSelect\n            v-model=\"newUser.gender\"\n            label=\"Jinsi\"\n            class=\"w-full\"\n            :options=\"roleSelectOptions\"\n            :rules=\"[validators.required]\"\n            name=\"gender\"\n            value-by=\"value\"\n          />\n        </div>\n        <VaDateInput\n          v-model=\"newUser.birthdate\"\n          label=\"Tug'ilgan sanasi\"\n          class=\"w-full\"\n          name=\"birthdate\"\n          manual-input\n        />\n      </div>\n\n      <VaInput v-model=\"newUser.phone\" label=\"Telefon raqami\" class=\"w-full sm:w-1/2\" name=\"phone\" />\n      <div class=\"flex gap-2 flex-col-reverse items-stretch justify-end w-full sm:flex-row sm:items-center\">\n        <VaButton preset=\"secondary\" color=\"secondary\" @click=\"$emit('close')\">Bekor qilish</VaButton>\n        <VaButton :disabled=\"!isValid\" @click=\"onSave\">{{ saveButtonLabel }}</VaButton>\n      </div>\n    </div>\n  </VaForm>\n</template>\n","\nimport { ref, computed, watch, onMounted } from 'vue'\nimport { updateUser, addUser, removeUser, type Filters, Pagination } from '../../../data/pages/users'\nimport router from '../../../router'\nimport { appointmentStore } from '../../../stores/appointment'\nimport { User } from '../types'\nimport { useRoute } from 'vue-router'\n\nconst makePaginationRef = () => ref<Pagination>({ current_page: 1, per_page: 10, total: 0, total_pages: 0 })\nconst makeFiltersRef = () => ref<Partial<Filters>>({ search: '' })\n\nexport const useUsers = (options?: {\n  pagination?: Ref<Pagination>\n  filters?: Ref<Partial<Filters>>\n}) => {\n  const isLoading = ref(false)\n  const users = ref<User[]>([])\n  const store = appointmentStore()\n  const route = useRoute()  // Получаем доступ к роуту для извлечения параметров\n  const path = computed(() => route.path)\n  const query = computed(() => route.query)\n\n  const { filters = makeFiltersRef(), pagination = makePaginationRef() } = options || {}\n\n  // Функция для инициализации состояния из URL\n  const initializeFromQuery = () => {\n    const queryParams = query.value\n\n    // Устанавливаем текущую страницу и количество элементов на странице из URL, если они есть\n    pagination.value.current_page = queryParams.page ? parseInt(queryParams.page as string, 10) : 1\n    pagination.value.per_page = queryParams.per_page ? parseInt(queryParams.per_page as string, 10) : 10\n\n    // Устанавливаем параметры поиска\n    filters.value.search = queryParams.search ? queryParams.search as string : ''\n  }\n\n  const fetch = async () => {\n    const params = {\n      page: pagination.value.current_page,\n      per_page: pagination.value.per_page,\n      search: filters.value.search,\n    }\n\n    await updatePagination(params)\n  }\n\n  const updatePagination = async (params) => {\n    isLoading.value = true\n\n    // Обновляем роут с параметрами пагинации и фильтров\n    router.push({ path: path.value, query: params })\n\n    try {\n      const { data } = await store.GET_LIST_OF_APPOINTMENTS(params)\n      users.value = data.data\n\n      // Обновляем информацию о пагинации (общее количество элементов, страниц и т.д.)\n      pagination.value.total = data.pagination.total\n      pagination.value.per_page = data.pagination.per_page\n      pagination.value.current_page = data.pagination.current_page\n      pagination.value.total_pages = data.pagination.total_pages\n    } catch (error) {\n      console.error('Error fetching data:', error)\n    } finally {\n      isLoading.value = false\n    }\n  }\n\n  // Инициализация состояния при загрузке компонента\n  onMounted(() => {\n    initializeFromQuery() // Устанавливаем начальные значения из URL\n    fetch()               // Загружаем данные с этими параметрами\n  })\n\n  // Следим за изменениями в пагинации или фильтрах и загружаем данные при их изменении\n  watch([pagination, filters], fetch, { deep: true })\n\n  return {\n    isLoading,\n    filters,\n    pagination,\n    users,\n    fetch,\n\n    async add(user: User) {\n      isLoading.value = true\n      await addUser(user)\n      await fetch()\n      isLoading.value = false\n    },\n\n    async update(user: User) {\n      isLoading.value = true\n      await updateUser(user)\n      await fetch()\n      isLoading.value = false\n    },\n\n    async remove(user: User) {\n      isLoading.value = true\n      await removeUser(user)\n      await fetch()\n      isLoading.value = false\n    },\n  }\n}\n","<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport AppointmentsTable from './widgets/AppointmentsTable.vue'\nimport EditUserForm from './widgets/EditUserForm.vue'\nimport { User } from './types'\nimport { useUsers } from './composables/useUsers'\nimport { useModal, useToast } from 'vuestic-ui'\nimport PatientsTable from '../patients/widgets/PatientsTable.vue'\n\nconst doShowEditUserModal = ref(false)\n\nconst { users, isLoading, filters, sorting, pagination, ...usersApi } = useUsers()\n\nconst userToEdit = ref<User | null>(null)\n\nconst showEditUserModal = (user: User) => {\n  console.log(user, 'user')\n  userToEdit.value = user\n  doShowEditUserModal.value = true\n}\n\nconst showAddUserModal = () => {\n  userToEdit.value = null\n  doShowEditUserModal.value = true\n}\n\nconst { init: notify } = useToast()\n\nconst onUserSaved = async (user: User) => {\n  if (userToEdit.value) {\n    await usersApi.update(user)\n    console.log(user, 'user')\n\n    notify({\n      message: `${user.fullname} ${$t('hasBeenUpdated')}`,\n      color: 'success',\n    })\n  } else {\n    usersApi.add(user)\n    notify({\n      message: `${user.fullname} ${$t('hasBeenCreated')}`,\n      color: 'success',\n    })\n  }\n}\n\nconst onUserDelete = async (user: User) => {\n  await usersApi.remove(user)\n  notify({\n    message: `${user.fullname} ${$t('hasBeenDeleted')}`,\n    color: 'success',\n  })\n}\n\nconst editFormRef = ref()\n\nconst { confirm } = useModal()\n\nconst beforeEditFormModalClose = async (hide: () => unknown) => {\n  if (editFormRef.value.isFormHasUnsavedChanges) {\n    const agreed = await confirm({\n      maxWidth: '380px',\n      message: $t('formHasUnsavedChanges'),\n      size: 'small',\n    })\n    if (agreed) {\n      hide()\n    }\n  } else {\n    hide()\n  }\n}\n</script>\n\n<template>\n  <h1 class=\"page-title\">{{ $t('appointment') }}</h1>\n\n  <VaCard>\n    <VaCardContent>\n      <div class=\"flex flex-col md:flex-row gap-2 mb-2 justify-between\">\n        <div class=\"flex flex-col md:flex-row gap-2 justify-start\">\n          <VaInput v-model=\"filters.search\" :placeholder=\"$t('search')\">\n            <template #prependInner>\n              <VaIcon name=\"search\" color=\"secondary\" size=\"small\" />\n            </template>\n          </VaInput>\n        </div>\n        <!-- <VaButton @click=\"showAddUserModal\">{{ $t('addPatient') }}</VaButton> -->\n      </div>\n\n      <AppointmentsTable\n        :users=\"users\"\n        :loading=\"isLoading\"\n        :pagination=\"pagination\"\n        @update:current_page=\"pagination.current_page = $event; fetchUsers()\"\n        @editUser=\"showEditUserModal\"\n        @deleteUser=\"onUserDelete\"\n      />\n    </VaCardContent>\n  </VaCard>\n\n  <VaModal\n    v-slot=\"{ cancel, ok }\"\n    v-model=\"doShowEditUserModal\"\n    size=\"large\"\n    mobile-fullscreen\n    close-button\n    hide-default-actions\n    :before-cancel=\"beforeEditFormModalClose\"\n  >\n    <h1 class=\"va-h5\">{{ userToEdit ? $t('edit') : $t('addPatient') }}</h1>\n    <EditUserForm\n      ref=\"editFormRef\"\n      :user=\"userToEdit\"\n      :save-button-label=\"userToEdit ? $t('save') : $t('add')\"\n      @close=\"cancel\"\n      @save=\"\n        (user) => {\n          onUserSaved(user)\n          ok()\n        }\n      \"\n    />\n  </VaModal>\n</template>\n"],"names":["columns","defineVaDataTableColumns","props","__props","emit","__emit","users","toRef","sortByVModel","useVModel","sortingOrderVModel","roleColors","computed","confirm","useModal","onUserDelete","user","formatDate","dateStr","date","options","formatIdentifiers","identifiers","item","defaultNewUser","newUser","ref","store","patientStore","isFormHasUnsavedChanges","key","_a","__expose","watch","newUserProps","i","_b","form","useForm","onSave","payload","moment","response","data","error","roleSelectOptions","makePaginationRef","makeFiltersRef","useUsers","isLoading","appointmentStore","route","useRoute","path","query","filters","pagination","initializeFromQuery","queryParams","fetch","params","updatePagination","router","onMounted","addUser","updateUser","removeUser","doShowEditUserModal","sorting","usersApi","userToEdit","showEditUserModal","notify","useToast","onUserSaved","editFormRef","beforeEditFormModalClose","hide"],"mappings":"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"}