{"version":3,"file":"PatientsPage-3b63f60a.js","sources":["../../src/pages/patients/widgets/PatientsTable.vue","../../src/pages/patients/widgets/EditUserForm.vue","../../src/pages/patients/composables/useUsers.ts","../../src/pages/patients/PatientsPage.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { defineVaDataTableColumns, useModal } from 'vuestic-ui'\nimport { User, UserRole } from '../types'\nimport { PropType, computed, toRef, ref } from 'vue'\nimport { Pagination, Sorting } from '../../../data/pages/users'\nimport { useVModel } from '@vueuse/core'\nimport { useI18n } from 'vue-i18n'\n\nconst { t } = useI18n()\n\nconst columns = defineVaDataTableColumns([\n  { label: t('ID'), key: 'id', sortable: false },\n  { label: t('fullName'), key: 'full_name', sortable: true },\n  { label: t('identityDocument'), key: 'identifier', sortable: true },\n  { label: t('birthYear'), key: 'birth_date', sortable: true },\n  { label: t('phoneNumber'), key: 'phone_number', sortable: true },\n  { label: ' ', key: 'actions', align: 'right' },\n])\n\nconst props = defineProps({\n  users: {\n    type: Array as PropType<User[]>,\n    required: true,\n  },\n  loading: { type: Boolean, default: false },\n  pagination: { type: Object as PropType<Pagination>, required: true },\n  sortBy: { type: String as PropType<Sorting['sortBy']>, required: true },\n  sortingOrder: { type: String as PropType<Sorting['sortingOrder']>, required: true },\n})\n\nconst emit = defineEmits<{\n  (event: 'edit-user', user: User): void\n  (event: 'delete-user', user: User): void\n  (event: 'update:sortBy', sortBy: Sorting['sortBy']): void\n  (event: 'update:sortingOrder', sortingOrder: Sorting['sortingOrder']): void\n}>()\n\nconst users = toRef(props, 'users')\nconst sortByVModel = useVModel(props, 'sortBy', emit)\nconst sortingOrderVModel = useVModel(props, 'sortingOrder', emit)\n\nconst roleColors: Record<UserRole, string> = {\n  admin: 'danger',\n  user: 'background-element',\n  owner: 'warning',\n}\n\nconst totalPages = computed(() => Math.ceil(props.pagination.total / props.pagination.perPage))\n\nconst { confirm } = useModal()\nconst test = ref(5)\n\nconst onUserDelete = async (user: User) => {\n  const agreed = await confirm({\n    title: t('Delete user'),\n    message: t('Are you sure you want to delete {name}?', { name: user.fullname }),\n    okText: t('Delete'),\n    cancelText: t('Cancel'),\n    size: 'small',\n    maxWidth: '380px',\n  })\n\n  if (agreed) {\n    emit('delete-user', user)\n  }\n}\n\nconst formatIdentifiers = (identifiers) => {\n  identifiers = Array.isArray(identifiers) ? identifiers : [];\n\n  if (identifiers.length === 0) {\n    return t('noDocument');\n  }\n\n  if (identifiers.length <= 2) {\n    return identifiers.map(item => item.value).join(', ');\n  }\n\n  return (\n    identifiers.slice(0, 2).map(item => item.value).join(', ') + ' + ' + (identifiers.length - 2) + t(' more')\n  );\n};\n\n</script>\n\n<template>\n  <VaDataTable\n    :columns=\"columns\"\n    :items=\"users\"\n    :loading=\"$props.loading\"\n  >\n    <template #cell(fullname)=\"{ rowData }\">\n      <div class=\"flex items-center gap-2 max-w-[230px] ellipsis\">\n        {{ rowData.id }}\n      </div>\n    </template>\n\n    <template #cell(identifier)=\"{ rowData }\">\n      <div class=\"ellipsis max-w-[300px] lg:max-w-[450px]\">\n        {{ formatIdentifiers(rowData.identifier) }}\n      </div>\n    </template>\n\n    <template #cell(actions)=\"{ rowData }\">\n      <div class=\"flex gap-2 justify-end\">\n        <VaButton\n          preset=\"primary\"\n          size=\"small\"\n          icon=\"mso-edit\"\n          aria-label=\"Edit user\"\n          @click=\"$emit('edit-user', rowData as User)\"\n        />\n        <VaButton\n          preset=\"primary\"\n          size=\"small\"\n          icon=\"mso-delete\"\n          color=\"danger\"\n          @click=\"onUserDelete(rowData as User)\"\n        />\n      </div>\n    </template>\n  </VaDataTable>\n\n  <div class=\"pagination-container mt-4\">\n    <div class=\"pagination-controls\">\n      <VaButton\n        preset=\"secondary\"\n        icon=\"va-arrow-left\"\n        aria-label=\"Previous Page\"\n        class=\"rounded\"\n        rounded\n        gapped\n        :disabled=\"pagination.current_page === 1\"\n        @click=\"$emit('update:current_page', pagination.current_page - 1)\"\n      />\n\n      <VaPagination\n        v-model:modelValue=\"pagination.current_page\"\n        :pages=\"pagination.total_pages\"\n        :visible-pages=\"pagination.total_pages\"\n        @update:modelValue=\"$emit('update:current_page', pagination.current_page)\"\n        active-page-color=\"#154EC1\"\n        buttons-preset=\"secondary\"\n      >\n\n      </VaPagination>\n\n      <VaButton\n        preset=\"secondary\"\n        icon=\"va-arrow-right\"\n        aria-label=\"Next Page\"\n        buttons-preset=\"secondary\"\n        rounded\n        gapped\n        :disabled=\"pagination.current_page === pagination.total_pages\"\n        @click=\"$emit('update:current_page', pagination.current_page + 1)\"\n      />\n    </div>\n\n    <div class=\"total-count\">\n      <span>Общее количество: {{ pagination.total }}</span>\n    </div>\n  </div>\n</template>\n\n\n\n<style lang=\"scss\" scoped>\n.va-data-table {\n  ::v-deep(.va-data-table__table-tr) {\n    border-bottom: 1px solid var(--va-background-border);\n  }\n}\n.va-pagination__item--active {\n  background-color: #007bff;  /* Меняем цвет активной страницы */\n  color: white;\n  font-weight: bold;\n}\n.pagination-container {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 1rem;\n  flex-wrap: wrap; /* Адаптируется для мобильных устройств */\n}\n\n.pagination-controls {\n  display: flex;\n  gap: 0.5rem;\n  flex-wrap: wrap;\n}\n\n.total-count {\n  font-weight: 500;\n  color: #4a4a4a;\n  text-align: right;\n}\n\n/* Для мобильных устройств */\n@media (max-width: 768px) {\n  .pagination-container {\n    flex-direction: row; /* Перестраиваем в колонку на маленьких экранах */\n    align-items: center;\n  }\n\n  .pagination-controls {\n    justify-content: center;\n    gap: 0;\n  }\n\n  .total-count {\n    margin-top: 0.5rem;\n    text-align: center; /* Центрируем текст на маленьких экранах */\n  }\n\n  /* Стили для кнопок и других элементов */\n  .va-button {\n    font-size: 14px;\n    padding: 0.25rem 0.5rem; /* Уменьшаем кнопки для мобильных */\n  }\n\n  .va-pagination {\n    font-size: 14px; /* Уменьшаем размер текста в пагинации */\n  }\n  .active-page {\n    background: red !important;\n  }\n}\n\n</style>\n","<script setup lang=\"ts\">\nimport { PropType, computed, ref, watch } from 'vue'\nimport { useForm } from 'vuestic-ui'\nimport { User, UserRole } from '../types'\nimport { patientStore } from '../../../stores/patient'\nimport { validators } from '../../../services/utils'\nimport moment from 'moment'\n\n\nconst props = defineProps({\n  user: {\n    type: Object as PropType<User | null>,\n    default: null,\n  },\n  saveButtonLabel: {\n    type: String,\n    default: 'Saqlash',\n  },\n})\n\nconst defaultNewUser: User = {\n  lastname: '',\n  firstname: '',\n  middlename: '',\n  nnuzb: '',\n  ppn: '',\n  phone: '',\n  birthdate: null,\n  url: '',\n  gender: 'men',\n}\n\nconst newUser = ref<User>({ ...defaultNewUser })\nconst store = patientStore()\n\nconst isFormHasUnsavedChanges = computed(() => {\n  return Object.keys(newUser.value).some((key) => {\n    if (key === 'avatar' || key === 'projects') {\n      return false\n    }\n    return newUser.value[key as keyof User] !== (props.user ?? defaultNewUser)?.[key as keyof User]\n  })\n})\n\ndefineExpose({\n  isFormHasUnsavedChanges,\n})\n\nwatch(\n  () => props.user,\n  (newUserProps) => {\n    if (newUserProps) {\n      newUser.value = {\n        lastname: newUserProps.last_name || '',\n        firstname: newUserProps.first_name || '',\n        middlename: newUserProps.middle_name || '',\n        nnuzb: newUserProps.identifier.find(i => i.code === 'NNUZB')?.value || '',\n        ppn: newUserProps.identifier.find(i => i.code === 'PPN')?.value || '',\n        phone: newUserProps.phone_number || '',\n        birthdate: newUserProps.birth_date || null,\n        url: newUserProps.url || '',\n        gender: newUserProps.gender || 'men', // Adjust if necessary\n      }\n    } else {\n      newUser.value = { ...defaultNewUser }\n    }\n  },\n  { immediate: true },\n)\n\nconst form = useForm('add-user-form')\n\nconst emit = defineEmits(['close', 'save'])\n\nconst onSave = async () => {\n  if (form.validate()) {\n    const payload = {\n      lastName: newUser.value.lastname,\n      firstName: newUser.value.firstname,\n      middleName: newUser.value.middlename,\n      identifier: [\n        {\n          id: 1,\n          code: 'PPN',\n          value: newUser.value.ppn,\n          system: 'http://fhir.ssv.uz/ValueSet/identifier-type',\n          display: 'Серия и номер паспорта',\n          parent_id: null,\n        },\n        {\n          id: 2,\n          code: 'NNUZB',\n          value: newUser.value.nnuzb,\n          system: 'http://fhir.ssv.uz/ValueSet/identifier-type',\n          display: 'Идентификационный номер гражданина в Республике Узбекистан (ПИНФЛ)',\n          parent_id: null,\n        },\n      ],\n      phoneNumber: newUser.value.phone,\n      url: newUser.value.url,\n      gender: newUser.value.gender === 'men' ? 'male' : 'female',\n      birthDate: moment(newUser.value.birthdate).format('YYYY-MM-DDTHH:mm:ssZ'),\n    }\n\n    try {\n      if (props.user) {\n        await store.UPDATE_PATIENT(payload, props.user.id).then(async (response) => {\n          if (response.status === 200) {\n            const data = await response.data\n            emit('save', data)\n          } else {\n            console.error('Failed to save user data:', response)\n          }\n        })\n      } else {\n        await store.CREATE_PATIENT(payload).then(async (response) => {\n          if (response.status === 201) {\n            const data = await response.data\n            emit('save', data)\n          } else {\n            console.error('Failed to save user data:', response)\n          }\n        })\n      }\n    } catch (error) {\n      console.error('Error during request:', error)\n    }\n  }\n}\n\nconst roleSelectOptions: { text: Capitalize<UserRole>; value: UserRole }[] = [\n  { text: 'Erkak', value: 'men' },\n  { text: 'Ayol', value: 'female' },\n]\n\n</script>\n\n\n<template>\n  <VaForm v-slot=\"{ isValid }\" ref=\"add-user-form\" class=\"flex-col justify-start items-start gap-4 inline-flex w-full\">\n    <div class=\"self-stretch flex-col justify-start items-start gap-4 flex\">\n      <div class=\"flex gap-4 flex-col sm:flex-row w-full\">\n        <VaInput\n          v-model=\"newUser.lastname\"\n          :label=\"$t('lastname')\"\n          class=\"w-full sm:w-1/2\"\n          :rules=\"[validators.required]\"\n          name=\"lastname\"\n        />\n        <VaInput\n          v-model=\"newUser.firstname\"\n          :label=\"$t('firstname')\"\n          class=\"w-full sm:w-1/2\"\n          :rules=\"[validators.required]\"\n          name=\"firstname\"\n        />\n        <VaInput v-model=\"newUser.middlename\" :label=\"$t('middlename')\" class=\"w-full sm:w-1/2\" name=\"middlename\" />\n      </div>\n      <div class=\"flex gap-4 flex-col sm:flex-row w-full\">\n        <VaInput v-model=\"newUser.nnuzb\" :label=\"$t('pinfl')\" class=\"w-full sm:w-1/2\" name=\"nnuzb\" />\n        <VaInput v-model=\"newUser.ppn\" :label=\"$t('passport')\" class=\"w-full sm:w-1/2\" name=\"ppn\" />\n      </div>\n\n      <div class=\"flex gap-4 w-full\">\n        <div class=\"w-1/2\">\n          <VaSelect\n            v-model=\"newUser.gender\"\n            :label=\"$t('gender')\"\n            class=\"w-full\"\n            :options=\"roleSelectOptions\"\n            :rules=\"[validators.required]\"\n            name=\"gender\"\n            value-by=\"value\"\n          />\n        </div>\n        <VaDateInput\n          v-model=\"newUser.birthdate\"\n          :label=\"$t('birthDate')\"\n          class=\"w-full\"\n          name=\"birthdate\"\n          manual-input\n        />\n      </div>\n\n      <VaInput v-model=\"newUser.phone\" :label=\"$t('phoneNumber')\" class=\"w-full sm:w-1/2\" name=\"phone\" />\n      <div class=\"flex gap-2 flex-col-reverse items-stretch justify-end w-full sm:flex-row sm:items-center\">\n        <VaButton preset=\"secondary\" color=\"secondary\" @click=\"$emit('close')\">{{ $t('cancel') }}</VaButton>\n        <VaButton :disabled=\"!isValid\" @click=\"onSave\">{{ saveButtonLabel }}</VaButton>\n      </div>\n    </div>\n  </VaForm>\n</template>\n\n","import { ref, computed, watch, onMounted } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\nimport { patientStore } from '../../../stores/patient'\nimport { Filters, Pagination, User } from '../types'\n\nconst makePaginationRef = () => ref<Pagination>({\n  current_page: 1,\n  per_page: 10,\n  total: 0,\n  total_pages: 0,\n})\n\nconst makeFiltersRef = () => ref<Partial<Filters>>({\n  firstname: '',\n  lastname: '',\n  middlename: '',\n  gender: null,\n})\n\nexport const useUsers = (options?: {\n  pagination?: ReturnType<typeof makePaginationRef>\n  filters?: ReturnType<typeof makeFiltersRef>\n}) => {\n  const router = useRouter()    // Router instance for manipulating routes\n  const route = useRoute()      // Route instance to access current route params\n\n  const isLoading = ref(false)  // Loading state\n  const users = ref<User[]>([]) // Holds the fetched users\n  const store = patientStore()  // Vuex store for handling data fetching\n\n  const { filters = makeFiltersRef(), pagination = makePaginationRef() } = options || {}\n\n  const initializeFromQuery = () => {\n    const queryParams = route.query\n\n    pagination.value.current_page = queryParams.page ? parseInt(queryParams.page as string, 10) : 1\n    pagination.value.per_page = queryParams.per_page ? parseInt(queryParams.per_page as string, 10) : 10\n\n    // Apply query parameters to filters (firstname, lastname, middlename, gender)\n    filters.value.firstname = queryParams.firstname ? queryParams.firstname as string : ''\n    filters.value.lastname = queryParams.lastname ? queryParams.lastname as string : ''\n    filters.value.middlename = queryParams.middlename ? queryParams.middlename as string : ''\n    filters.value.gender = queryParams.gender ? queryParams.gender as string : null\n  }\n\n  const fetch = async () => {\n    const params = {\n      page: pagination.value.current_page,\n      per_page: pagination.value.per_page,\n      firstname: filters.value.firstname, // firstname filter\n      lastname: filters.value.lastname, // lastname filter\n      middlename: filters.value.middlename, // middlename filter\n      gender: filters.value.gender, // gender filter\n    }\n\n    isLoading.value = true\n\n    try {\n      router.push({ path: route.path, query: params })\n\n      const { data } = await store.GET_LIST_OF_PATIENTS(params)\n      users.value = data.data\n\n      pagination.value.total = data.pagination.total\n      pagination.value.total_pages = data.pagination.total_pages\n    } catch (error) {\n      console.error('Error fetching users:', error)\n    } finally {\n      isLoading.value = false\n    }\n  }\n\n  onMounted(() => {\n    initializeFromQuery()\n    fetch()\n  })\n\n  watch([filters, pagination], fetch, { deep: true })\n\n  return {\n    isLoading,\n    filters,\n    pagination,\n    users,\n    fetch,\n\n    async add(user: User) {\n      isLoading.value = true\n      try {\n        await store.ADD_USER(user)\n        await fetch()\n      } finally {\n        isLoading.value = false\n      }\n    },\n\n    async update(user: User) {\n      isLoading.value = true\n      try {\n        await store.UPDATE_USER(user)\n        await fetch()\n      } finally {\n        isLoading.value = false\n      }\n    },\n\n    async remove(user: User) {\n      isLoading.value = true\n      try {\n        await store.REMOVE_USER(user)\n        await fetch()\n      } finally {\n        isLoading.value = false\n      }\n    },\n  }\n}\n","<template>\n  <div class=\"flex flex-col md:flex-row gap-2 mb-2 justify-between mb-4\">\n    <VaButton @click=\"showAddUserModal\">{{ $t('addPatient') }}</VaButton>\n  </div>\n  <VaCard>\n    <VaCardContent>\n      <div class=\"grid gap-4 grid-cols-4 mb-4\">\n        <div class=\"w-full\">\n          <VaInput v-model=\"formValues.lastname\" :label=\"$t('lastname')\" :placeholder=\"$t('lastname')\" />\n        </div>\n        <div class=\"w-full\">\n          <VaInput v-model=\"formValues.firstname\" :label=\"$t('firstname')\" :placeholder=\"$t('firstname')\" />\n        </div>\n        <div class=\"w-full\">\n          <VaInput v-model=\"formValues.middlename\" :label=\"$t('middlename')\" :placeholder=\"$t('middlename')\" />\n        </div>\n        <div>\n          <VaSelect\n            v-model=\"formValues.gender\"\n            :label=\"$t('gender')\"\n            class=\"w-full\"\n            :options=\"roleSelectOptions\"\n            name=\"gender\"\n            value-by=\"value\"\n          />\n        </div>\n        <div>\n          <VaButton color=\"warning\" @click=\"filterPatients\">{{ $t('filter') }}</VaButton>\n        </div>\n      </div>\n\n      <PatientsTable\n        :users=\"users\"\n        :loading=\"isLoading\"\n        :pagination=\"pagination\"\n        @update:current_page=\"updateCurrentPage\"\n        @editUser=\"showEditUserModal\"\n        @deleteUser=\"onUserDelete\"\n      />\n    </VaCardContent>\n  </VaCard>\n\n  <VaModal\n    v-slot=\"{ cancel, ok }\"\n    v-model=\"doShowEditUserModal\"\n    size=\"large\"\n    mobile-fullscreen\n    close-button\n    hide-default-actions\n  >\n    <h1 class=\"va-h5\">{{ userToEdit ? 'Tahrirlash' : 'Bemor qo`shish' }}</h1>\n    <EditUserForm\n      ref=\"editFormRef\"\n      :user=\"userToEdit\"\n      :save-button-label=\"userToEdit ? 'Saqlash' : 'Qo`shish'\"\n      @close=\"cancel\"\n      @save=\"\n        (user) => {\n          onUserSaved(user)\n          ok()\n        }\n      \"\n    />\n  </VaModal>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, onMounted, watch } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\nimport PatientsTable from './widgets/PatientsTable.vue'\nimport EditUserForm from './widgets/EditUserForm.vue'\nimport { User } from './types'\nimport { useUsers } from './composables/useUsers'\nimport { useToast } from 'vuestic-ui'\n\n// Modal management\nconst doShowEditUserModal = ref(false)\nconst userToEdit = ref<User | null>(null)\n\n// Fetch users and handle filters\nconst { users, isLoading, filters, pagination, fetch, ...usersApi } = useUsers()\n\n// Toast notifications\nconst { init: notify } = useToast()\n\n// Router and route instances\nconst router = useRouter()\nconst route = useRoute()\n\n// Temporary local state for inputs (form values)\nconst formValues = ref({\n  firstname: '',\n  lastname: '',\n  middlename: '',\n  gender: null,\n})\n\n// Function to initialize form values from the route query parameters\nconst initializeFormValuesFromRoute = () => {\n  const query = route.query\n  formValues.value.firstname = query.firstname || ''\n  formValues.value.lastname = query.lastname || ''\n  formValues.value.middlename = query.middlename || ''\n  formValues.value.gender = query.gender || null\n}\n\n// Update route query params when filter button is clicked\nconst filterPatients = () => {\n  filters.value.firstname = formValues.value.firstname\n  filters.value.lastname = formValues.value.lastname\n  filters.value.middlename = formValues.value.middlename\n  filters.value.gender = formValues.value.gender\n\n  router.push({\n    query: {\n      ...route.query,\n      firstname: formValues.value.firstname || undefined,\n      lastname: formValues.value.lastname || undefined,\n      middlename: formValues.value.middlename || undefined,\n      gender: formValues.value.gender || undefined,\n    },\n  })\n\n  fetch()\n}\n\n// Initialize form values from route query when the component is mounted\nonMounted(() => {\n  initializeFormValuesFromRoute()\n})\n\n// Update current page method\nconst updateCurrentPage = (page) => {\n  pagination.current_page = page;\n  fetch();\n}\n\n// Show modal for editing an existing user\nconst showEditUserModal = (user: User) => {\n  userToEdit.value = user\n  doShowEditUserModal.value = true\n}\n\n// Show modal for adding a new user\nconst showAddUserModal = () => {\n  userToEdit.value = null\n  doShowEditUserModal.value = true\n}\n\n// Handle saving a user (add or update)\nconst onUserSaved = async (user: User) => {\n  if (userToEdit.value) {\n    await usersApi.update(user)\n    notify({\n      message: `${user.fullname} has been updated`,\n      color: 'success',\n    })\n  } else {\n    await usersApi.add(user)\n    notify({\n      message: `${user.fullname} has been created`,\n      color: 'success',\n    })\n  }\n  fetch() // Refresh the list after saving\n}\n\n// Handle deleting a user\nconst onUserDelete = async (user: User) => {\n  await usersApi.remove(user)\n  notify({\n    message: `${user.fullname} has been deleted`,\n    color: 'success',\n  })\n  fetch() // Refresh the list after deletion\n}\n</script>\n"],"names":["t","useI18n","columns","defineVaDataTableColumns","props","__props","emit","__emit","users","toRef","useVModel","computed","confirm","useModal","ref","onUserDelete","user","formatIdentifiers","identifiers","item","defaultNewUser","newUser","store","patientStore","isFormHasUnsavedChanges","key","_a","__expose","watch","newUserProps","_b","form","useForm","onSave","payload","moment","response","data","error","roleSelectOptions","makePaginationRef","makeFiltersRef","useUsers","options","router","useRouter","route","useRoute","isLoading","filters","pagination","initializeFromQuery","queryParams","fetch","params","onMounted","doShowEditUserModal","userToEdit","usersApi","notify","useToast","formValues","initializeFormValuesFromRoute","query","filterPatients","updateCurrentPage","page","showEditUserModal","showAddUserModal","onUserSaved"],"mappings":"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"}