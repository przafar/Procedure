{"version":3,"file":"ShowPage-19a73d3a.js","sources":["../../src/stores/prescription.ts","../../src/pages/appointments/ShowPage.vue"],"sourcesContent":["import { defineStore } from 'pinia'\nimport axios from '../plugins/axios'\n\nexport const prescriptionStore = defineStore('prescription', {\n  state: () => ({\n    loading: false,\n    listOfPrescriptions: [],\n    prescriptionInfo: {},\n  }),\n  getters: {\n    getListOfPrescriptions: (state) => state.listOfPrescriptions,\n    getPrescriptionInfo: (state) => state.prescriptionInfo,\n  },\n  actions: {\n    // Get the list of prescriptions with optional filtering (pagination, appointment_id)\n    async GET_LIST_OF_PRESCRIPTIONS(params: any) {\n      this.loading = true\n      try {\n        const response = await axios.get('prescriptions', { params: params })\n        this.listOfPrescriptions = response.data\n        return response\n      } catch (error) {\n        return error\n      } finally {\n        this.loading = false\n      }\n    },\n\n    // Get prescription by ID\n    async GET_PRESCRIPTION_BY_ID(id: string) {\n      this.loading = true\n      try {\n        const response = await axios.get(`prescriptions/${id}`)\n        this.prescriptionInfo = response.data\n        return response\n      } catch (error) {\n        return error\n      } finally {\n        this.loading = false\n      }\n    },\n\n    // Create a new prescription\n    async CREATE_PRESCRIPTION(body: any) {\n      this.loading = true\n      try {\n        const response = await axios.post('prescriptions', body)\n        console.log(response, 'Prescription created successfully')\n        return response\n      } catch (error) {\n        return error\n      } finally {\n        this.loading = false\n      }\n    },\n\n    // Update an existing prescription\n    async UPDATE_PRESCRIPTION(id: string, body: any) {\n      this.loading = true\n      try {\n        const response = await axios.put(`prescriptions/${id}`, body)\n        console.log(response, 'Prescription updated successfully')\n        return response\n      } catch (error) {\n        return error\n      } finally {\n        this.loading = false\n      }\n    },\n\n    // Delete a prescription by ID\n    async DELETE_PRESCRIPTION(id: string) {\n      this.loading = true\n      try {\n        const response = await axios.delete(`prescriptions/${id}`)\n        console.log(response, 'Prescription deleted successfully')\n        return response\n      } catch (error) {\n        return error\n      } finally {\n        this.loading = false\n      }\n    }\n  },\n})\n","<template>\n  <div class=\"container mx-auto px-4 sm:px-6 py-6 relative\">\n    <!-- Check if appointmentInfo is available -->\n    <div v-if=\"appointmentInfo\" class=\"grid grid-cols-1 lg:grid-cols-12 gap-6\">\n      <!-- Block 1: Patient Information -->\n      <div class=\"col-span-12 lg:col-span-4 bg-white p-4 lg:p-6 rounded-lg shadow-lg\">\n        <h2 class=\"text-lg lg:text-2xl font-bold text-gray-800 mb-4 lg:mb-6\">{{ $t('patientInfo') }}</h2>\n        <div class=\"space-y-3 lg:space-y-4\">\n          <div class=\"bg-gray-50 p-3 lg:p-4 rounded-lg shadow-sm hover:shadow-md transition-shadow duration-200\">\n            <h3 class=\"text-sm lg:text-md font-semibold text-gray-700\">{{ $t('patientId') }}</h3>\n            <p class=\"text-xs lg:text-sm text-gray-600\">{{ appointmentInfo.patient?.id }}</p>\n          </div>\n          <div class=\"bg-gray-50 p-3 lg:p-4 rounded-lg shadow-sm hover:shadow-md transition-shadow duration-200\">\n            <h3 class=\"text-sm lg:text-md font-semibold text-gray-700\">{{ $t('fullName') }}</h3>\n            <p class=\"text-xs lg:text-sm text-gray-600\">{{ appointmentInfo.patient?.last_name }} {{ appointmentInfo.patient?.first_name }} {{ appointmentInfo.patient?.middle_name }}</p>\n          </div>\n          <div class=\"bg-gray-50 p-3 lg:p-4 rounded-lg shadow-sm hover:shadow-md transition-shadow duration-200\">\n            <h3 class=\"text-sm lg:text-md font-semibold text-gray-700\">{{ $t('passport') }}</h3>\n            <p class=\"text-xs lg:text-sm text-gray-600\">{{ formatIdentifiers(appointmentInfo.patient?.identifier) }}</p>\n          </div>\n          <div class=\"bg-gray-50 p-3 lg:p-4 rounded-lg shadow-sm hover:shadow-md transition-shadow duration-200\">\n            <h3 class=\"text-sm lg:text-md font-semibold text-gray-700\">{{ $t('phoneNumber') }}</h3>\n            <p class=\"text-xs lg:text-sm text-gray-600\">{{ appointmentInfo.patient?.phone_number || $t('noPhoneNumber') }}</p>\n          </div>\n        </div>\n      </div>\n\n      <!-- Block 2: Appointment Details -->\n      <div class=\"col-span-12 lg:col-span-8 bg-white p-4 lg:p-6 rounded-lg shadow-lg\">\n        <div class=\"flex flex-col sm:flex-row justify-between items-start sm:items-center mb-4 lg:mb-6\">\n          <h2 class=\"text-lg lg:text-2xl font-bold text-gray-800\">{{ $t('appointmentDetails') }}</h2>\n          <div class=\"mt-3 sm:mt-0 flex flex-col sm:flex-row items-start sm:items-center space-y-2 sm:space-y-0 sm:space-x-4\">\n            <div :class=\"statusClass(appointmentInfo.status)\" class=\"px-3 py-1 rounded-lg text-white font-bold text-xs sm:text-sm\">\n              {{ formatStatus(appointmentInfo.status) }}\n            </div>\n            <div class=\"text-gray-500 text-xs sm:text-sm\">\n              {{ $t('createdAt') }}: {{ formatDate(appointmentInfo.created_at) }}\n            </div>\n            <button @click=\"errorAppointment\" class=\"bg-red-500 text-white px-3 py-1 rounded-lg text-xs sm:text-sm hover:bg-red-600 transition-colors duration-200\">\n              {{ $t('enteredInError') }}\n            </button>\n            <button v-if=\"appointmentInfo.status === 'in-progress'\" @click=\"editAppointment\" class=\"bg-blue-500 text-white px-3 py-1 rounded-lg text-xs sm:text-sm hover:bg-blue-600 transition-colors duration-200\">\n              {{ $t('edit') }}\n            </button>\n            <button v-if=\"appointmentInfo.status === 'in-progress'\" @click=\"endAppointment\" class=\"bg-yellow-500 text-white px-3 py-1 rounded-lg text-xs sm:text-sm hover:bg-yellow-600 transition-colors duration-200\">\n              {{ $t('endAppointment') }}\n            </button>\n            <button v-if=\"appointmentInfo.status === 'draft'\" @click=\"startAppointment\" class=\"bg-green-500 text-white px-3 py-1 rounded-lg text-xs sm:text-sm hover:bg-green-600 transition-colors duration-200\">\n              {{ $t('startAppointment') }}\n            </button>\n          </div>\n        </div>\n        <div class=\"space-y-3 lg:space-y-4\">\n          <div class=\"bg-gray-50 p-3 lg:p-4 rounded-lg shadow-sm hover:shadow-md transition-shadow duration-200\">\n            <h3 class=\"text-sm lg:text-md font-semibold text-gray-700\">{{ $t('primaryEncounterType') }}</h3>\n            <p class=\"text-xs lg:text-sm text-gray-600\">{{ appointmentInfo.encounter_class?.display }}</p>\n          </div>\n          <!-- Encounter Types Loop -->\n          <div v-for=\"item in appointmentInfo.encounter_types\" :key=\"item.id\" class=\"bg-blue-50 p-3 lg:p-4 rounded-lg shadow-sm hover:shadow-lg transition-shadow duration-200 flex items-center space-x-2\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" class=\"w-5 lg:w-8 h-5 lg:h-8 text-blue-500\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\" />\n            </svg>\n            <div>\n              <h3 class=\"text-sm lg:text-md font-semibold text-gray-800\">{{ item.display }}</h3>\n              <p class=\"text-xs lg:text-sm text-gray-500\">Code: {{ item.code }}</p>\n            </div>\n          </div>\n          <div class=\"bg-gray-50 p-3 lg:p-4 rounded-lg shadow-sm hover:shadow-md transition-shadow duration-200\">\n            <h3 class=\"text-sm lg:text-md font-semibold text-gray-700\">{{ $t('reason') }}</h3>\n            <p class=\"text-xs lg:text-sm text-gray-600\">{{ appointmentInfo.reason_text }}</p>\n          </div>\n        </div>\n      </div>\n\n    </div>\n    <div>\n      <!-- Prescriptions Section -->\n      <div  class=\"mt-8\">\n        <div class=\"flex flex-row items-center mb-4\">\n          <div>\n            <h2 class=\"text-lg lg:text-2xl font-bold text-gray-800\">{{ $t('prescriptions') }}</h2>\n          </div>\n          <div v-if=\"appointmentInfo && appointmentInfo?.status === 'in-progress'\" class=\"ml-4\">\n            <button v-if=\"!appointmentInfo?.prescriptions.length\" @click=\"createPrescription\" class=\"bg-blue-500 text-white px-3 py-1 rounded-lg text-xs sm:text-sm hover:bg-blue-600 transition-colors duration-200\">Создать рецепт</button>\n            <button v-if=\"appointmentInfo?.prescriptions.length\" @click=\"updatePrescription\" class=\"bg-green-500 text-white px-3 py-1 rounded-lg text-xs sm:text-sm hover:bg-green-600 transition-colors duration-200 ml-4\">Редактирования рецепта</button>\n            <button v-if=\"appointmentInfo?.prescriptions && appointmentInfo?.prescriptions.length > 0\" @click=\"removePrescription\" class=\"ml-4 bg-red-500 text-white px-3 py-1 rounded-lg text-xs sm:text-sm hover:bg-red-600 transition-colors duration-200\">Удалить</button>\n          </div>\n\n        </div>\n        <ul v-if=\"appointmentInfo?.prescriptions && appointmentInfo?.prescriptions.length > 0\" class=\"space-y-4\">\n          <li v-for=\"prescription in appointmentInfo?.prescriptions\" :key=\"prescription.id\" class=\"bg-white p-4 rounded-lg shadow-md\">\n            <div class=\"mb-2\">\n              <h3 class=\"font-semibold text-gray-800\">{{ $t('prescribingDoctor') }}: {{ prescription.prescribing_doctor }}</h3>\n            </div>\n            <div class=\"text-gray-600 text-sm\">\n              <p><strong>{{ $t('medications') }}:</strong> {{ formatMedications(prescription.medications) }}</p>\n              <p><strong>{{ $t('notes') }}:</strong> {{ prescription.notes || $t('noNotes') }}</p>\n              <p><strong>{{ $t('prescriptionDate') }}:</strong> {{ formatDate(prescription.prescription_date) }}</p>\n            </div>\n          </li>\n        </ul>\n        <div v-else class=\"text-gray-500 mt-8 bg-white p-4 rounded-lg shadow-md\">\n          <p>{{ $t('noPrescriptions') }}</p>\n        </div>\n      </div>\n    </div>\n\n    <VaModal\n      v-slot=\"{ cancel, ok }\"\n      v-model=\"appointmentVisible\"\n      size=\"large\"\n      mobile-fullscreen\n      close-button\n      hide-default-actions\n      :before-cancel=\"beforeEditFormModalClose\"\n    >\n      <h1>{{ $t('addService') }}</h1>\n      <VaForm v-slot=\"{ isValid }\" ref=\"add-user-form\" class=\"flex-col justify-start items-start gap-4 inline-flex w-full mt-4\">\n        <div class=\"self-stretch flex-col justify-start items-start gap-4 flex\">\n          <div v-for=\"item in state.encounterTypesData\" class=\"bg-gray-50 w-full p-4 rounded-lg\">\n            <div class=\"flex gap-4 w-full\">\n              <div class=\"w-full\">\n                <VaSelect\n                  v-model=\"item.class.code\"\n                  :label=\"$t('primaryEncounterType')\"\n                  class=\"w-full\"\n                  :options=\"getEncounterClasses\"\n                  :rules=\"[validators.required]\"\n                  text-by=\"display\"\n                  value-by=\"code\"\n                  disabled\n                />\n              </div>\n            </div>\n            <div class=\"mt-4\">\n              <div v-for=\"(c, index) in item.type\" class=\"w-full mb-2 flex flex-col md:flex-row align-center justify-center items-end\">\n                <VaSelect\n                  v-model=\"c.code\"\n                  :label=\"`${$t('encounterType')} #${index + 1}`\"\n                  class=\"w-full\"\n                  :options=\"item.typesDatas\"\n                  :rules=\"[validators.required]\"\n                  text-by=\"display\"\n                  value-by=\"code\"\n                />\n                <div class=\"w-full md:w-12 mt-2 md:mt-0 flex justify-end\">\n                  <button @click=\"deleteType(index)\" class=\"cursor-pointer\">\n                    <svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                      <g id=\"Iconly/Light/Delete\">\n                        <g id=\"Delete\">\n                          <path id=\"Stroke 1\" d=\"M14.4936 7.10107C14.4936 7.10107 14.0863 12.1523 13.8501 14.2801C13.7376 15.2963 13.1098 15.8918 12.0816 15.9106C10.1248 15.9458 8.16584 15.9481 6.20984 15.9068C5.22059 15.8866 4.60334 15.2836 4.49309 14.2853C4.25534 12.1388 3.85034 7.10107 3.85034 7.10107\" stroke=\"#D10F5C\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                          <path id=\"Stroke 3\" d=\"M15.5311 4.67969H2.81262\" stroke=\"#D10F5C\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                          <path id=\"Stroke 5\" d=\"M13.0804 4.67974C12.4917 4.67974 11.9847 4.26349 11.8692 3.68674L11.6869 2.77474C11.5744 2.35399 11.1934 2.06299 10.7592 2.06299H7.58443C7.15018 2.06299 6.76918 2.35399 6.65668 2.77474L6.47443 3.68674C6.35893 4.26349 5.85193 4.67974 5.26318 4.67974\" stroke=\"#D10F5C\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                        </g>\n                      </g>\n                    </svg>\n\n                  </button>\n                </div>\n              </div>\n              <div class=\"flex flex-row justify-end mt-3\">\n                <button @click=\"addType\" class=\"bg-green-500 text-white px-3 py-1 rounded-lg text-xs sm:text-sm hover:bg-green-600 transition-colors duration-200\">\n                  {{ $t('add') }} +\n                </button>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"w-full mb-4\">\n            <VaTextarea v-model=\"state.reasonText\" :label=\"$t('reason')\" class=\"w-full\" />\n          </div>\n\n          <div class=\"flex gap-2 flex-col-reverse items-stretch justify-end w-full sm:flex-row sm:items-center\">\n            <VaButton preset=\"secondary\" color=\"secondary\" @click=\"$emit('close')\">{{ $t('cancel') }}</VaButton>\n            <VaButton :disabled=\"!isValid\" @click=\"onSave\">{{ $t('save') }}</VaButton>\n\n          </div>\n        </div>\n      </VaForm>\n    </VaModal>\n\n    <VaModal\n      v-slot=\"{ cancel, ok }\"\n      v-model=\"prescriptionVisible\"\n      size=\"large\"\n      mobile-fullscreen\n      close-button\n      hide-default-actions\n      :before-cancel=\"beforeEditFormModalClose\"\n    >\n      <h1>Создания рецепта</h1>\n      <VaForm\n        v-slot=\"{ isValid }\"\n        ref=\"add-user-form\"\n        class=\"flex-col justify-start items-start gap-4 inline-flex w-full mt-4\"\n      >\n        <div class=\"self-stretch flex-col justify-start items-start gap-4 flex\">\n          <!-- Medications Loop -->\n          <div v-for=\"(item, index) in state.prescriptionData.medications\" class=\"bg-gray-50 w-full p-4 rounded-lg\">\n            <div class=\"w-full\">\n              <div class=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n                <div class=\"col-span-1\">\n                  <VaInput v-model=\"item.name\" placeholder=\"Name\" label=\"Medication Name\" />\n                </div>\n                <div class=\"col-span-1\">\n                  <VaInput v-model=\"item.dosage\" placeholder=\"Dosage\" label=\"Dosage\" />\n                </div>\n                <div class=\"col-span-1\">\n                  <VaInput v-model=\"item.duration\" placeholder=\"Duration\" label=\"Duration\" />\n                </div>\n                <div class=\"col-span-1\">\n                  <VaInput v-model=\"item.frequency\" placeholder=\"Frequency\" label=\"Frequency\" />\n                </div>\n              </div>\n            </div>\n\n            <div class=\"w-full mt-2 md:mt-4 flex flex-col items-end justify-end\">\n              <button v-if=\"index === 1\" @click=\"deletePrescription(index)\" class=\"bg-red-500 text-white px-3 py-1 rounded-lg text-xs sm:text-sm hover:bg-red-600 transition-colors duration-200\">\n                Удалить\n              </button>\n            </div>\n            <!-- Encounter Type Section -->\n\n          </div>\n          <div class=\"flex w-full items-center justify-end\">\n            <button\n              @click=\"addPrescription\"\n              class=\"bg-green-500 text-white px-3 py-1 rounded-lg text-xs sm:text-sm hover:bg-green-600 transition-colors duration-200 mt-2\"\n            >\n              {{ $t('add') }} +\n            </button>\n          </div>\n          <div class=\"flex flex-col w-full\">\n            <VaInput v-model=\"state.prescriptionData.prescribing_doctor\" placeholder=\"Full name\" label=\"Doctor\" />\n          </div>\n\n          <!-- Reason Section -->\n          <div class=\"w-full mb-4\">\n            <VaTextarea v-model=\"state.prescriptionData.notes\" :label=\"$t('note')\" class=\"w-full\" />\n          </div>\n          <!-- Action Buttons -->\n          <div class=\"flex gap-2 flex-col-reverse items-stretch justify-end w-full sm:flex-row sm:items-center\">\n            <VaButton preset=\"secondary\" color=\"secondary\" @click=\"$emit('close')\">{{ $t('cancel') }}</VaButton>\n            <VaButton v-if=\"!appointmentInfo.prescriptions.length\" :disabled=\"!isValid\" @click=\"savePrescription\">{{ $t('save') }}</VaButton>\n            <VaButton v-else :disabled=\"!isValid\" @click=\"updatePrescriptionSubmit\">{{ $t('update') }}</VaButton>\n\n          </div>\n        </div>\n      </VaForm>\n    </VaModal>\n\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, onMounted, reactive, computed } from 'vue'\nimport { useRoute, useRouter } from 'vue-router';\nimport moment from 'moment';\nimport { appointmentStore } from '../../stores/appointment';\nimport { ServicesStore } from '../../stores/services';\nimport { prescriptionStore} from '../../stores/prescription'\nimport { validators } from '../../services/utils'\n\nconst route = useRoute();\nconst appointmentId = route.params.id;\nconst appointment = appointmentStore();\nconst prescription = prescriptionStore();\nconst loading = ref(true);\nconst appointmentInfo = ref(null);\nconst appointmentVisible = ref(false);\nconst prescriptionVisible = ref(false);\nconst encounter = ServicesStore();\n\nconst getEncounterClasses = computed(() => encounter.getEncounterClasses);\n\n\nconst state = reactive({\n  encounterTypesData: [\n    {\n      class: {\n        code: '',\n        display: '',\n      },\n      type: [\n        {\n          code: null,\n          display: '',\n          id: '',\n        },\n      ],\n      typesDatas: []\n    }\n  ],\n  reasonText: '',\n  prescriptionData: {\n    prescribing_doctor: '',\n    medications: [\n      {\n        name: '',\n        dosage: '',\n        frequency: '',\n        duration: '',\n      }\n    ],\n    notes: '',\n    prescription_date: '',\n  }\n});\n\n\nonMounted(async () => {\n  await fetchDetails();\n});\n\nconst fetchDetails = async () => {\n  loading.value = true;\n  try {\n    const response = await appointment.GET_BY_ID(appointmentId);\n    appointmentInfo.value = { ...response.data };\n  } catch (error) {\n    console.error('Failed to fetch patient data:', error);\n  } finally {\n    loading.value = false;\n  }\n};\n\n// Function to determine background class for the status badge\nconst statusClass = (status) => {\n  switch (status) {\n    case 'draft':\n      return 'bg-yellow-500';\n    case 'in-process':\n      return 'bg-blue-500';\n    case 'finished':\n      return 'bg-green-500';\n    case 'entered-in-error':\n      return 'bg-red-500';\n    default:\n      return 'bg-gray-500';\n  }\n};\n\n// Function to format status text\nconst formatStatus = (status) => {\n  return status.replace(/-/g, ' ').replace(/\\b\\w/g, (l) => l.toUpperCase());\n};\n\nconst formatIdentifiers = (identifiers) => {\n  if (!identifiers || identifiers.length === 0) return 'No Document';\n  return identifiers.map(identifier => `${identifier.display}: ${identifier.value}`).join(', ');\n};\n\n// Format birth date and created at\nconst formatDate = (dateStr) => {\n  const date = new Date(dateStr);\n  // Set the timezone offset for GMT+5\n  const options = {\n    timeZone: 'Asia/Tashkent', // This is the timezone for GMT+5 (Uzbekistan)\n    day: '2-digit',\n    month: '2-digit',\n    year: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit',\n    hour12: false\n  };\n\n  return date.toLocaleString('en-GB', options).replace(',', ''); // Format in DD-MM-YYYY HH:mm\n};\nconst formatMedications = (medications) => {\n  if (!medications || medications.length === 0) return 'No Medications';\n  return medications.map(med => `${med.name} (${med.dosage}, ${med.frequency}, ${med.duration})`).join(', ');\n};\n\n// Edit Appointment Function\nconst editAppointment = async () => {\n  appointmentVisible.value = true\n  state.encounterTypesData[0].class.code = appointmentInfo.value.encounter_class.code\n  state.encounterTypesData[0].class.display = appointmentInfo.value.encounter_class.display\n  state.encounterTypesData[0].type = appointmentInfo.value.encounter_types ? appointmentInfo.value.encounter_types : [{ code: '', display: '', id: '' }];\n  state.reasonText = appointmentInfo.value.reason_text;\n  await encounter.GET_LIST_OF_ECOUNTER_CLASSES();\n  await encounter.GET_LIST_OF_ECOUNTER_TYPES(appointmentInfo.value.encounter_class.code).then((response) => {\n    state.encounterTypesData[0].typesDatas = response.data.data;\n  });\n};\n\nconst startAppointment = async () => {\n  const payload = {\n    status: 'in-progress',\n  }\n  await appointment.UPDATE_STATUS(appointmentId, payload);\n  await fetchDetails();\n}\nconst endAppointment = async () => {\n  const payload = {\n    status: 'finished',\n  }\n  await appointment.UPDATE_STATUS(appointmentId, payload);\n  await fetchDetails();\n}\nconst errorAppointment = async () => {\n  const payload = {\n    status: 'entered-in-error',\n  }\n  await appointment.UPDATE_STATUS(appointmentId, payload);\n  await fetchDetails();\n}\n\nconst beforeEditFormModalClose = async (hide: () => unknown) => {\n  hide();\n};\nconst addType = () => {\n  state.encounterTypesData[0].type.push({\n    code: '',\n    display: '',\n    id: '',\n  });\n};\nconst onSave = async () => {\n  const encounterTypes = state.encounterTypesData[0].type.map(item => item.code);\n  const payload = {\n    encounter_types: encounterTypes,\n    reason_text: state.reasonText,\n    status: 'in-progress'\n  };\n  console.log(payload, 'payload');\n  await appointment.UPDATE(appointmentId, payload);\n  await fetchDetails();\n};\nconst deleteType = (index) => {\n  state.encounterTypesData[0].type.splice(index, 1);\n};\nconst createPrescription = () => {\n  prescriptionVisible.value = true;\n  const doctor = JSON.parse(localStorage.getItem('user'));\n  state.prescriptionData.prescribing_doctor = doctor.fullname;\n}\nconst updatePrescription = () => {\n  prescriptionVisible.value = true;\n  const doctor = JSON.parse(localStorage.getItem('user'));\n  state.prescriptionData.prescribing_doctor = doctor.fullname;\n  state.prescriptionData.medications = appointmentInfo.value.prescriptions[0].medications;\n  state.prescriptionData.notes = appointmentInfo.value.prescriptions[0].notes;\n}\nconst deletePrescription = (index) => {\n  state.prescriptionData.medications.splice(index, 1);\n}\nconst addPrescription = () => {\n  state.prescriptionData.medications.push({\n    name: '',\n    dosage: '',\n    frequency: '',\n    duration: '',\n  });\n}\nconst removePrescription = async () => {\n  await prescription.DELETE_PRESCRIPTION(appointmentInfo.value.prescriptions[0].id);\n  await fetchDetails();\n}\nconst savePrescription = async () => {\n  const payload = {\n    appointment_id: appointmentId,\n    prescribing_doctor: state.prescriptionData.prescribing_doctor,\n    medications: state.prescriptionData.medications,\n    notes: state.prescriptionData.notes,\n  }\n  await prescription.CREATE_PRESCRIPTION(payload);\n  await fetchDetails();\n  prescriptionVisible.value = false;\n}\nconst updatePrescriptionSubmit = async () => {\n  const payload = {\n    prescribing_doctor: state.prescriptionData.prescribing_doctor,\n    medications: state.prescriptionData.medications,\n    notes: state.prescriptionData.notes,\n  }\n  await prescription.UPDATE_PRESCRIPTION(appointmentInfo.value.prescriptions[0].id, payload);\n  await fetchDetails();\n  prescriptionVisible.value = false;\n}\n\n</script>\n\n<style scoped>\n\n\n.container {\n  max-width: 100%;\n  padding: 0;\n}\n\n.bg-white {\n  background-color: #fff;\n}\n\n.bg-gray-50 {\n  background-color: #f9fafb;\n}\n\n.bg-blue-50 {\n  background-color: #ebf8ff;\n}\n\n.shadow-sm {\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);\n}\n\n.shadow-lg {\n  box-shadow: 0 10px 15px rgba(0, 0, 0, 0.1);\n}\n\n.text-center {\n  text-align: center;\n}\n\n.text-gray-700 {\n  color: #4a4a4a;\n}\n\n.text-gray-600 {\n  color: #718096;\n}\n\n.text-gray-500 {\n  color: #a0aec0;\n}\n\n.status-badge {\n  font-size: 0.875rem;\n  font-weight: bold;\n  padding: 0.5rem 1rem;\n  border-radius: 9999px;\n}\n\nbutton {\n  font-size: 0.875rem;\n}\n\n.hover\\:shadow-md:hover {\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\n.hover\\:shadow-lg:hover {\n  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.15);\n}\n\n.transition-shadow {\n  transition: box-shadow 0.2s;\n}\n</style>\n"],"names":["prescriptionStore","defineStore","state","params","response","axios","error","id","body","appointmentId","useRoute","appointment","appointmentStore","prescription","loading","ref","appointmentInfo","appointmentVisible","prescriptionVisible","encounter","ServicesStore","getEncounterClasses","computed","reactive","onMounted","fetchDetails","statusClass","status","formatStatus","l","formatIdentifiers","identifiers","identifier","formatDate","dateStr","date","options","formatMedications","medications","med","editAppointment","startAppointment","payload","endAppointment","errorAppointment","beforeEditFormModalClose","hide","addType","onSave","item","deleteType","index","createPrescription","doctor","updatePrescription","deletePrescription","addPrescription","removePrescription","savePrescription","updatePrescriptionSubmit"],"mappings":"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"}