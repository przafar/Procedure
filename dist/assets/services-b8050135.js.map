{"version":3,"file":"services-b8050135.js","sources":["../../src/stores/services.ts"],"sourcesContent":["// src/stores/cards.ts\nimport { defineStore } from 'pinia'\nimport axios from '../plugins/axios'\n\nexport const ServicesStore = defineStore('service', {\n  state: () => ({\n    loading: false,\n    encounterClasses: [],\n    encounterTypes: [],\n  }),\n  getters: {\n    getFilter: (state) => state.filter,\n    getEncounterClasses: (state) => state.encounterClasses,\n    getEncounterTypes: (state) => state.encounterTypes,\n  },\n  actions: {\n    async GET_LIST_OF_ECOUNTER_CLASSES(params: any) {\n      return await axios\n        .get('valuesets/encounter_classes', { params: params })\n        .then((e) => {\n          this.encounterClasses = e.data.data\n          return e\n        })\n        .catch((error) => {\n          return error\n        })\n    },\n    async GET_LIST_OF_ECOUNTER_TYPES(params: string) {\n      return await axios\n        .get(`valuesets/encounter_types/${params}`)\n        .then((response) => {\n          this.encounterTypes = response.data.data\n          return response\n        })\n        .catch((error) => {\n          console.error('Error fetching encounter types:', error)\n          throw error // Переброс ошибки для обработки выше\n        })\n    },\n    async CREATE_ENCOUNTER_CLASSES(body: any) {\n      return await axios\n        .post('valuesets/encounter_classes', body)\n        .then((e) => {\n          console.log(e, 'Success')\n          return e\n        })\n        .catch((error) => {\n          return error\n        })\n    },\n    async CREATE_ENCOUNTER_TYPES(body: any) {\n      return await axios\n        .post('valuesets/encounter_types', body)\n        .then((e) => {\n\n          return e\n        })\n        .catch((error) => {\n          return error\n        })\n    },\n    // async UPDATE_PATIENT(body: any, id: string) {\n    //   return await axios\n    //     .put(`patients/${id}`, body)\n    //     .then((e) => {\n    //       console.log(e, 'Success')\n    //       return e\n    //     })\n    //     .catch((error) => {\n    //       return error\n    //     })\n    // },\n  },\n})\n"],"names":["ServicesStore","defineStore","state","params","axios","error","response","body"],"mappings":"gDAIa,MAAAA,EAAgBC,EAAY,UAAW,CAClD,MAAO,KAAO,CACZ,QAAS,GACT,iBAAkB,CAAC,EACnB,eAAgB,CAAC,CAAA,GAEnB,QAAS,CACP,UAAYC,GAAUA,EAAM,OAC5B,oBAAsBA,GAAUA,EAAM,iBACtC,kBAAoBA,GAAUA,EAAM,cACtC,EACA,QAAS,CACP,MAAM,6BAA6BC,EAAa,CACvC,OAAA,MAAMC,EACV,IAAI,8BAA+B,CAAE,OAAAD,EAAgB,EACrD,KAAM,IACA,KAAA,iBAAmB,EAAE,KAAK,KACxB,EACR,EACA,MAAOE,GACCA,CACR,CACL,EACA,MAAM,2BAA2BF,EAAgB,CACxC,OAAA,MAAMC,EACV,IAAI,6BAA6BD,CAAM,EAAE,EACzC,KAAMG,IACA,KAAA,eAAiBA,EAAS,KAAK,KAC7BA,EACR,EACA,MAAOD,GAAU,CACR,cAAA,MAAM,kCAAmCA,CAAK,EAChDA,CAAA,CACP,CACL,EACA,MAAM,yBAAyBE,EAAW,CACjC,OAAA,MAAMH,EACV,KAAK,8BAA+BG,CAAI,EACxC,KAAM,IACG,QAAA,IAAI,EAAG,SAAS,EACjB,EACR,EACA,MAAOF,GACCA,CACR,CACL,EACA,MAAM,uBAAuBE,EAAW,CAC/B,OAAA,MAAMH,EACV,KAAK,4BAA6BG,CAAI,EACtC,KAAM,GAEE,CACR,EACA,MAAOF,GACCA,CACR,CACL,CAYF,CACF,CAAC"}